error[E0599]: no method named `get_field` found for struct `Box<(dyn Reflect + 'static)>` in the current scope
  --> tests/reflect_derive/generics.fail.rs:14:9
   |
14 |     foo.get_field::<NoReflect>("a").unwrap();
   |         ^^^^^^^^^ method not found in `Box<(dyn Reflect + 'static)>`

error[E0277]: the trait bound `NoReflect: Reflect` is not satisfied
  --> tests/reflect_derive/generics.fail.rs:12:37
   |
12 |     let mut foo: Box<dyn Reflect> = Box::new(Foo::<NoReflect> { a: NoReflect(42.0) });
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reflect` is not implemented for `NoReflect`
   |
   = help: the following other types implement trait `Reflect`:
             &'static Path
             ()
             (A, B)
             (A, B, C)
             (A, B, C, D)
             (A, B, C, D, E)
             (A, B, C, D, E, F)
             (A, B, C, D, E, F, G)
           and $N others
note: required for `Foo<NoReflect>` to implement `Reflect`
  --> tests/reflect_derive/generics.fail.rs:3:10
   |
3  | #[derive(Reflect)]
   |          ^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
4  | struct Foo<T> {
   |        ^^^^^^
   = note: required for the cast from `Foo<NoReflect>` to the object type `dyn Reflect`
   = note: this error originates in the derive macro `Reflect` (in Nightly builds, run with -Z macro-backtrace for more info)
