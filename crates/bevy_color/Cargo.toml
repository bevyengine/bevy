[package]
name = "bevy_color"
version = "0.18.0-dev"
edition = "2024"
description = "Types for representing and manipulating color values"
homepage = "https://bevy.org"
repository = "https://github.com/bevyengine/bevy"
license = "MIT OR Apache-2.0"
keywords = ["bevy", "color"]
rust-version = "1.85.0"

[dependencies]
bevy_math = { path = "../bevy_math", version = "0.18.0-dev", default-features = false, features = [
  "curve",
] }
bevy_reflect = { path = "../bevy_reflect", version = "0.18.0-dev", default-features = false, optional = true }
bytemuck = { version = "1", features = ["derive"] }
serde = { version = "1.0", features = [
  "derive",
], default-features = false, optional = true }
thiserror = { version = "2", default-features = false }
derive_more = { version = "2", default-features = false, features = ["from"] }
wgpu-types = { version = "26", default-features = false, optional = true }
encase = { version = "0.12", default-features = false, optional = true }

[features]
default = ["bevy_reflect", "encase", "std"]
std = [
  "alloc",
  "bevy_math/std",
  "bevy_reflect?/std",
  "serde?/std",
  "wgpu-types?/std",
]
alloc = ["bevy_math/alloc", "serde?/alloc"]
serialize = ["bevy_math/serialize", "serde"]
bevy_reflect = ["dep:bevy_reflect"]
wgpu-types = ["dep:wgpu-types"]
encase = ["dep:encase", "std"]
libm = ["bevy_math/libm"]
critical-section = ["bevy_reflect?/critical-section"]

[lints]
workspace = true

[package.metadata.docs.rs]
rustdoc-args = ["--generate-link-to-definition", "-Zunstable-options"]
all-features = true
