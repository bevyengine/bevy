[package]
name = "bevy_internal"
version.workspace = true
edition.workspace = true
description = "An internal Bevy crate used to facilitate optional dynamic linking via the 'dynamic' feature"
homepage.workspace = true
repository.workspace = true
license = "MIT OR Apache-2.0"
keywords = ["game", "engine", "gamedev", "graphics", "bevy"]
categories = ["game-engines", "graphics", "gui", "rendering"]

[features]
trace = [
    "bevy_app/trace",
    "bevy_core_pipeline?/trace",
    "bevy_ecs/trace",
    "bevy_log/trace",
    "bevy_render?/trace",
    "bevy_hierarchy/trace"
]
trace_chrome = [ "bevy_log/tracing-chrome" ]
trace_tracy = ["bevy_render?/tracing-tracy", "bevy_log/tracing-tracy" ]
wgpu_trace = ["bevy_render/wgpu_trace"]
debug_asset_server = ["bevy_asset/debug_asset_server"]

# Image format support for texture loading (PNG and HDR are enabled by default)
hdr = ["bevy_render/hdr"]
png = ["bevy_render/png"]
tga = ["bevy_render/tga"]
jpeg = ["bevy_render/jpeg"]
bmp = ["bevy_render/bmp"]
basis-universal = ["bevy_render/basis-universal"]
dds = ["bevy_render/dds"]
ktx2 = ["bevy_render/ktx2"]
# For ktx2 supercompression
zlib = ["bevy_render/zlib"]
zstd = ["bevy_render/zstd"]

# Audio format support (vorbis is enabled by default)
flac = ["bevy_audio/flac"]
mp3 = ["bevy_audio/mp3"]
vorbis = ["bevy_audio/vorbis"]
wav = ["bevy_audio/wav"]

# Enable watching file system for asset hot reload
filesystem_watcher = ["bevy_asset/filesystem_watcher"]

serialize = ["bevy_input/serialize", "bevy_window/serialize"]

# Display server protocol support (X11 is enabled by default)
wayland = ["bevy_winit/wayland"]
x11 = ["bevy_winit/x11"]

# enable rendering of font glyphs using subpixel accuracy
subpixel_glyph_atlas = ["bevy_text/subpixel_glyph_atlas"]

# Optimise for WebGL2
webgl = ["bevy_core_pipeline?/webgl", "bevy_pbr?/webgl", "bevy_render?/webgl"]

# enable systems that allow for automated testing on CI
bevy_ci_testing = ["bevy_app/bevy_ci_testing", "bevy_render/ci_limits"]

# Enable animation support, and glTF animation loading
animation = ["bevy_animation", "bevy_gltf?/bevy_animation"]

[dependencies]
# bevy
bevy_app.workspace = true
bevy_core.workspace = true
bevy_derive.workspace = true
bevy_diagnostic.workspace = true
bevy_ecs.workspace = true
bevy_hierarchy.workspace = true
bevy_input.workspace = true
bevy_log.workspace = true
bevy_math.workspace = true
bevy_ptr.workspace = true
bevy_reflect = { workspace = true, features = ["bevy"] }
bevy_time.workspace = true
bevy_transform.workspace = true
bevy_utils.workspace = true
bevy_window.workspace = true
bevy_tasks.workspace = true
# bevy (optional)
bevy_animation = { workspace = true, optional = true }
bevy_asset = { workspace = true, optional = true }
bevy_audio = { workspace = true, optional = true }
bevy_core_pipeline = { workspace = true, optional = true }
bevy_gltf = { workspace = true, optional = true }
bevy_pbr = { workspace = true, optional = true }
bevy_render = { workspace = true, optional = true }
bevy_dynamic_plugin = { workspace = true, optional = true }
bevy_scene = { workspace = true, optional = true }
bevy_sprite = { workspace = true, optional = true }
bevy_text = { workspace = true, optional = true }
bevy_ui = { workspace = true, optional = true }
bevy_winit = { workspace = true, optional = true }
bevy_gilrs = { workspace = true, optional = true }

[target.'cfg(target_os = "android")'.dependencies]
# This version *must* be the same as the version used by winit,
# or Android will break: https://github.com/rust-windowing/winit#android
ndk-glue = {version = "0.5", features = ["logger"]}
