error[E0308]: mismatched types
  --> tests/reflect_remote/type_mismatch_fail.rs:LL:CC
   |
LL |     #[derive(Reflect)]
   |              ^^^^^^^
   |              |
   |              expected `&TheirBar`, found `&TheirFoo`
   |              arguments to this function are incorrect
   |
   = note: expected reference `&structs::external_crate::TheirBar`
              found reference `&structs::external_crate::TheirFoo`
note: associated function defined here
  --> BEVY_ROOT/bevy_reflect/src/remote.rs:LL:CC
   |
LL |     fn as_wrapper(remote: &Self::Remote) -> &Self;
   |        ^^^^^^^^^^
   = note: this error originates in the derive macro `Reflect` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/reflect_remote/type_mismatch_fail.rs:LL:CC
   |
LL |     #[derive(Reflect)]
   |              ^^^^^^^
   |              |
   |              expected `&mut TheirBar`, found `&mut TheirFoo`
   |              arguments to this function are incorrect
   |
   = note: expected mutable reference `&mut structs::external_crate::TheirBar`
              found mutable reference `&mut structs::external_crate::TheirFoo`
note: associated function defined here
  --> BEVY_ROOT/bevy_reflect/src/remote.rs:LL:CC
   |
LL |     fn as_wrapper_mut(remote: &mut Self::Remote) -> &mut Self;
   |        ^^^^^^^^^^^^^^
   = note: this error originates in the derive macro `Reflect` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/reflect_remote/type_mismatch_fail.rs:LL:CC
   |
LL |     #[derive(Reflect)]
   |              ------- in this derive macro expansion
...
LL |         #[reflect(remote = MyBar)]
   |                            ^^^^^
   |                            |
   |                            expected `TheirBar`, found `TheirFoo`
   |                            expected due to this
   |
   = note: this error originates in the derive macro `Reflect` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/reflect_remote/type_mismatch_fail.rs:LL:CC
   |
LL |     #[derive(Reflect)]
   |              ^^^^^^^
   |              |
   |              expected `&TheirBar`, found `&TheirFoo`
   |              arguments to this function are incorrect
   |
   = note: expected reference `&tuple_structs::external_crate::TheirBar`
              found reference `&tuple_structs::external_crate::TheirFoo`
note: associated function defined here
  --> BEVY_ROOT/bevy_reflect/src/remote.rs:LL:CC
   |
LL |     fn as_wrapper(remote: &Self::Remote) -> &Self;
   |        ^^^^^^^^^^
   = note: this error originates in the derive macro `Reflect` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/reflect_remote/type_mismatch_fail.rs:LL:CC
   |
LL |     #[derive(Reflect)]
   |              ^^^^^^^
   |              |
   |              expected `&mut TheirBar`, found `&mut TheirFoo`
   |              arguments to this function are incorrect
   |
   = note: expected mutable reference `&mut tuple_structs::external_crate::TheirBar`
              found mutable reference `&mut tuple_structs::external_crate::TheirFoo`
note: associated function defined here
  --> BEVY_ROOT/bevy_reflect/src/remote.rs:LL:CC
   |
LL |     fn as_wrapper_mut(remote: &mut Self::Remote) -> &mut Self;
   |        ^^^^^^^^^^^^^^
   = note: this error originates in the derive macro `Reflect` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/reflect_remote/type_mismatch_fail.rs:LL:CC
   |
LL |     #[derive(Reflect)]
   |              ------- in this derive macro expansion
...
LL |         #[reflect(remote = MyBar)] external_crate::TheirFoo,
   |                            ^^^^^
   |                            |
   |                            expected `TheirBar`, found `TheirFoo`
   |                            expected due to this
   |
   = note: this error originates in the derive macro `Reflect` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: `?` operator has incompatible types
  --> tests/reflect_remote/type_mismatch_fail.rs:LL:CC
   |
LL |     #[reflect_remote(external_crate::TheirBar)]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `i32`, found `u32`
   |
   = note: `?` operator cannot convert from `u32` to `i32`
   = note: this error originates in the attribute macro `reflect_remote` (in Nightly builds, run with -Z macro-backtrace for more info)
help: you can convert a `u32` to an `i32` and panic if the converted value doesn't fit
   |
LL |     #[reflect_remote(external_crate::TheirBar)].try_into().unwrap()
   |                                                ++++++++++++++++++++

error[E0308]: mismatched types
  --> tests/reflect_remote/type_mismatch_fail.rs:LL:CC
   |
LL |       #[reflect_remote(external_crate::TheirBar)]
   |       -------------------------------------------
   |       |
   |  _____in this procedural macro expansion
   | |
LL | |
LL | |     enum MyBar {
LL | |         // Reason: Should use `i32`
LL | |         Value(u32),
   | |               ^^-
   | |_______________|_|
   |                 | expected due to the type of this binding
   |                 expected `i32`, found `u32`
   |
   = note: this error originates in the attribute macro `reflect_remote` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/reflect_remote/type_mismatch_fail.rs:LL:CC
   |
LL |     #[derive(Reflect)]
   |              ^^^^^^^
   |              |
   |              expected `&TheirBar`, found `&TheirFoo`
   |              arguments to this function are incorrect
   |
   = note: expected reference `&enums::external_crate::TheirBar`
              found reference `&enums::external_crate::TheirFoo`
note: associated function defined here
  --> BEVY_ROOT/bevy_reflect/src/remote.rs:LL:CC
   |
LL |     fn as_wrapper(remote: &Self::Remote) -> &Self;
   |        ^^^^^^^^^^
   = note: this error originates in the derive macro `Reflect` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/reflect_remote/type_mismatch_fail.rs:LL:CC
   |
LL |     #[derive(Reflect)]
   |              ^^^^^^^
   |              |
   |              expected `&mut TheirBar`, found `&mut TheirFoo`
   |              arguments to this function are incorrect
   |
   = note: expected mutable reference `&mut enums::external_crate::TheirBar`
              found mutable reference `&mut enums::external_crate::TheirFoo`
note: associated function defined here
  --> BEVY_ROOT/bevy_reflect/src/remote.rs:LL:CC
   |
LL |     fn as_wrapper_mut(remote: &mut Self::Remote) -> &mut Self;
   |        ^^^^^^^^^^^^^^
   = note: this error originates in the derive macro `Reflect` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/reflect_remote/type_mismatch_fail.rs:LL:CC
   |
LL |     #[derive(Reflect)]
   |              ^^^^^^^ expected `TheirFoo`, found `TheirBar`
   |
   = note: this error originates in the derive macro `Reflect` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/reflect_remote/type_mismatch_fail.rs:LL:CC
   |
LL |     #[derive(Reflect)]
   |              ------- in this derive macro expansion
...
LL |             #[reflect(remote = MyBar)] external_crate::TheirFoo,
   |                                ^^^^^
   |                                |
   |                                expected `TheirBar`, found `TheirFoo`
   |                                expected due to this
   |
   = note: this error originates in the derive macro `Reflect` (in Nightly builds, run with -Z macro-backtrace for more info)

error: aborting due to 12 previous errors

For more information about this error, try `rustc --explain E0308`.
