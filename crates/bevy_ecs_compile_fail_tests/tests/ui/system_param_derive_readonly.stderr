warning: unused import: `SystemState`
 --> tests/ui/system_param_derive_readonly.rs:2:63
  |
2 | use bevy_ecs::system::{ReadOnlySystemParamFetch, SystemParam, SystemState};
  |                                                               ^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

error[E0277]: the trait bound `&'static mut Foo: ReadOnlyWorldQuery` is not satisfied
  --> tests/ui/system_param_derive_readonly.rs:18:5
   |
18 |     assert_readonly::<Mutable>();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `ReadOnlyWorldQuery` is not implemented for `&'static mut Foo`
   |
   = help: the following other types implement trait `ReadOnlyWorldQuery`:
             &T
             ()
             (F0, F1)
             (F0, F1, F2)
             (F0, F1, F2, F3)
             (F0, F1, F2, F3, F4)
             (F0, F1, F2, F3, F4, F5)
             (F0, F1, F2, F3, F4, F5, F6)
           and 49 others
   = note: `ReadOnlyWorldQuery` is implemented for `&'static Foo`, but not for `&'static mut Foo`
   = note: required because of the requirements on the impl of `ReadOnlySystemParamFetch` for `QueryState<&'static mut Foo>`
   = note: 2 redundant requirements hidden
   = note: required because of the requirements on the impl of `ReadOnlySystemParamFetch` for `FetchState<(QueryState<&'static mut Foo>,)>`
note: required by a bound in `assert_readonly`
  --> tests/ui/system_param_derive_readonly.rs:23:32
   |
21 | fn assert_readonly<P: SystemParam>()
   |    --------------- required by a bound in this
22 | where
23 |     <P as SystemParam>::Fetch: ReadOnlySystemParamFetch,
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `assert_readonly`
