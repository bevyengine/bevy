warning: unused import: `SystemState`
 --> tests/ui/system_param_derive_readonly.rs:2:58
  |
2 | use bevy_ecs::system::{ReadOnlySystemParam, SystemParam, SystemState};
  |                                                          ^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

error[E0277]: the trait bound `&'static mut Foo: ReadOnlyWorldQueryData` is not satisfied
  --> tests/ui/system_param_derive_readonly.rs:18:23
   |
18 |     assert_readonly::<Mutable>();
   |                       ^^^^^^^ the trait `ReadOnlyWorldQueryData` is not implemented for `&'static mut Foo`
   |
   = help: the following other types implement trait `ReadOnlyWorldQueryData`:
             bevy_ecs::change_detection::Ref<'__w, T>
             Has<T>
             AnyOf<()>
             AnyOf<(F0,)>
             AnyOf<(F0, F1)>
             AnyOf<(F0, F1, F2)>
             AnyOf<(F0, F1, F2, F3)>
             AnyOf<(F0, F1, F2, F3, F4)>
           and $N others
   = note: `ReadOnlyWorldQueryData` is implemented for `&'static Foo`, but not for `&'static mut Foo`
   = note: required for `bevy_ecs::system::Query<'_, '_, &'static mut Foo>` to implement `ReadOnlySystemParam`
   = note: 1 redundant requirement hidden
   = note: required for `Mutable<'_, '_>` to implement `ReadOnlySystemParam`
note: required by a bound in `assert_readonly`
  --> tests/ui/system_param_derive_readonly.rs:23:8
   |
21 | fn assert_readonly<P>()
   |    --------------- required by a bound in this function
22 | where
23 |     P: ReadOnlySystemParam,
   |        ^^^^^^^^^^^^^^^^^^^ required by this bound in `assert_readonly`
